---
# We will use circleci mozilla-services context: eliot-circleci-image-push
#
version: 2.1

# See https://circleci.com/orbs/registry/orb/circleci/gcp-gcr
orbs:
  gcp-gcr: circleci/gcp-gcr@0.15.0


jobs:
  build_and_test:
    docker:
      - image: cimg/python:3.11.1

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.18

      - run:
          name: Get info
          command: |
            uname -v
            docker info

      - run:
          name: Create version.json
          # yamllint disable rule:line-length
          command: |
            # create a version.json per
            # https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json
          # yamllint enable rule:line-length

      - run:
          name: Build Docker images
          command: |
            # build eliot container
            make build

      - run:
          name: Verify requirements.txt contains correct dependencies
          # yamllint disable rule:line-length
          command: |
            docker compose run --rm --no-deps test-ci bash ./bin/run_verify_reqs.sh
          # yamllint enable rule:line-length

      - run:
          name: Run lint check
          command: |
            make .env
            docker compose run --rm --no-deps test-ci bash ./bin/run_lint.sh

      - run:
          name: Run Eliot tests
          command: |
            make .env
            docker compose up -d fakesentry statsd
            docker compose run --rm test-ci bash ./bin/run_test.sh eliot

      - run:
          name: Build docs
          command: |
            make .env
            docker compose run --rm --no-deps test-ci bash make -C docs/ html

workflows:
  version: 2
  build-test-push:
    jobs:
      - build_and_test:
          filters:
            tags:
              only: /.*/

      - gcp-gcr/push-image:
          name: Push image for eliot
          requires:
            - build_and_test
          context: eliot-circleci-image-push
          registry-url: us-docker.pkg.dev
          image: eliot-prod/eliot
          tag: ${CIRCLE_TAG:-latest}
          filters:
            tags:
              only: /.*/
            branches:
              only: main
