---
# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER    - login info for docker hub
# DOCKER_PASS
version: 2.1
jobs:
  main:
    docker:
      - image: cimg/python:3.11.1
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.18

      - run:
          name: Get info
          command: |
            uname -v
            docker info

      - run:
          name: Login to Dockerhub
          # yamllint disable rule:line-length
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
          # yamllint enable rule:line-length

      - run:
          name: Create version.json
          # yamllint disable rule:line-length
          command: |
            # create a version.json per
            # https://github.com/mozilla-services/Dockerflow/blob/master/docs/version_object.md
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
            "$CIRCLE_SHA1" \
            "$CIRCLE_TAG" \
            "$CIRCLE_PROJECT_USERNAME" \
            "$CIRCLE_PROJECT_REPONAME" \
            "$CIRCLE_BUILD_URL" > version.json
          # yamllint enable rule:line-length

      - run:
          name: Build Docker images
          command: |
            # build tecken containers
            make build

      - run:
          name: Verify requirements.txt contains correct dependencies
          # yamllint disable rule:line-length
          command: |
            docker compose run --rm --no-deps test-ci bash ./bin/run_verify_reqs.sh
          # yamllint enable rule:line-length

      - run:
          name: Run lint check
          command: |
            make .env
            docker compose run --rm --no-deps test-ci bash ./bin/run_lint.sh

      - run:
          name: Run Eliot tests
          command: |
            make .env
            docker compose up -d fakesentry statsd
            docker compose run --rm test-ci bash ./bin/run_test.sh eliot

      - run:
          name: Build docs
          command: |
            make .env
            docker compose run --rm --no-deps test-ci bash make -C docs/ html

workflows:
  version: 2
  build-test:
    jobs:
      - main:
          filters:
            tags:
              only: /.*/
